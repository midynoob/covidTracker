{"version":3,"sources":["components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/image.png","App.js","index.js","components/Chart/Chart.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","cx","card","infected","xs","md","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setdailyData","useEffect","initialDailyData","fetchAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","length","line","borderColor","fill","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","console","log","setState","this","src","coronaImage","alt","image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57652039.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport styles from './Cards.module.css';\nimport { Grid , CardContent, Typography, Card } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nconst Cards = ({data: { confirmed, recovered, deaths, lastUpdate}}) => {\n\n\n    if(!confirmed) {\n        return 'loading..';\n    }\n\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} className={cx(styles.card, styles.infected)} xs={12} md={3}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom >Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp\n                                start={0}\n                                end={confirmed.value}\n                                duration={2.5}\n                                separator=\",\"\n                            />\n\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of infected from COVID-19</Typography>   \n                    </CardContent>\n                </Grid>\n                <Grid item  component={Card} className={cx(styles.card, styles.recovered)} xs={12} md={3}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom >Recovered</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp\n                                start={0}\n                                end={recovered.value}\n                                duration={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>   \n                    </CardContent>\n                </Grid>\n                <Grid item component={Card}  className={cx(styles.card, styles.deaths)} xs={12} md={3}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom >Deaths</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp\n                                start={0}\n                                end={deaths.value}\n                                duration={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of deaths from COVID-19</Typography>   \n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards;\n","import axios from 'axios';\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async ( country ) => {\n\n    let changeableUrl = url;\n    if(country) {\n        changeableUrl = `${url}/countries/${country}`\n    }\n\n    try {\n        const { data: { confirmed, recovered , deaths , lastUpdate }} = await axios.get(changeableUrl);\n        return { confirmed, recovered , deaths , lastUpdate };\n    } catch (error) {\n\n    }\n}\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${url}/daily`);\n\n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate\n        }));\n        return modifiedData;\n    }catch(error){\n\n    }\n}\n\nexport const fetchCountries = async () => {\n    try {\n        const {data : { countries } } = await axios.get(`${url}/countries`);\n        return countries.map((country) => country.name);\n\n\n    }catch (error){\n\n    }\n}","import React from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { useState , useEffect } from 'react';\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: {confirmed, recovered, deaths}, country}) => {\n\n    const [dailyData, setdailyData] = useState([]);\n\n\n    useEffect (() => {\n        const fetchAPI = async () =>{\n            const initialDailyData = await fetchDailyData();\n            setdailyData(initialDailyData);\n        }\n\n        fetchAPI();\n\n    }, []);\n\n    const barChart = (\n        confirmed ? (\n            <Bar \n                data={{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets: [{\n                        label: 'People',\n                        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n                        data: [confirmed.value, recovered.value, deaths.value]\n                    }]\n                }}\n                options={{\n                    legend: {display: false},\n                    title: {display: true, text: `Current state in ${country}`}\n                }}\n            />\n        ) : null\n    )\n\n    const lineChart = (\n        dailyData.length ? (\n            <Line \n                className={styles.line}\n                data={{\n                    labels: dailyData.map(({date}) => date),\n                    datasets: [{\n                        data: dailyData.map(({confirmed}) => confirmed),\n                        label: 'Infected',\n                        borderColor: '#3333ff',\n                        fill: true\n                    },{\n                        data: dailyData.map(({deaths}) => deaths),\n                        label: 'Deaths',\n                        borderColor: 'red',\n                        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                        fill: true\n                    }]\n                }}\n            />\n        ) : null\n    )\n\n\n    return (\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n\n        </div>\n    )\n}\n\nexport default Chart;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport styles from './CountryPicker.module.css';\nimport { NativeSelect , FormControl } from '@material-ui/core';\nimport  { fetchCountries } from '../../api';\n\n\n\nconst CountryPicker = ({ handleCountryChange }) => {\n\n    const [fetchedCountries , setFetchedCountries    ] = useState([])\n\n    useEffect (() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n        }\n        fetchAPI();\n\n    }, [fetchedCountries]);\n\n\n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={e => handleCountryChange(e.target.value)} >\n                <option value=\"\">Global</option>\n                {fetchedCountries && fetchedCountries.map((country, i ) => <option key={i} value={country} >{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;\n","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react';\nimport { Cards , Chart , CountryPicker } from './components';\nimport { fetchData } from './api';\n\nimport styles from './App.module.css';\nimport coronaImage from './images/image.png';\n\nclass App extends React.Component {\n\n\n  state = {\n    data: {},\n    country: \"\"\n  }\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({data: fetchedData});\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    console.log(fetchedData);\n    this.setState({data: fetchedData, country: country});\n    console.log(country)\n  } \n\n  render() {\n\n    const {data, country} = this.state;\n\n    return(\n      <div className={styles.container}>\n        <img src={coronaImage} alt=\"COVID-19\" className={styles.image} />\n        <Cards data={data}/>\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n      </div>\n    )\n  }\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};"],"sourceRoot":""}